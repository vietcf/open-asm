  <div class="container-fluid">
    <form class="input-group mb-3 justify-content-end align-items-center" role="search" method="get" action="/system/system" style="max-width: 500px; margin-left: auto; margin-top: 2.5rem;">
    <input class="form-control rounded-start me-2" type="search" name="search" placeholder="Search by name, system ID..." aria-label="Search" value="<%= typeof search !== 'undefined' ? search : '' %>">
    <select class="form-select form-select-sm me-2" name="pageSize" onchange="this.form.submit()" style="width:90px;max-width:90px;">
      <% (pageSizeOptions || [10,20,50]).forEach(function(size) { %>
        <option value="<%= size %>" <%= pageSize == size ? 'selected' : '' %>><%= size %> / page</option>
      <% }) %>
    </select>
    <button class="btn btn-outline-secondary rounded-end" type="submit"><i class="bi bi-search"></i></button>
  </form>
  <div class="row mb-3">
    <div class="col-12 d-flex justify-content-end align-items-center" style="margin-top: 16px;">
      <% if (hasPermission && hasPermission('system.create')) { %>
        <a href="/system/system/add" class="btn btn-primary btn-sm me-2">
          <i class="bi bi-plus"></i> Add System
        </a>
      <% } %>
      <button type="button" class="btn btn-secondary btn-sm ms-2" data-bs-toggle="modal" data-bs-target="#filterSystemModal">
        <i class="bi bi-funnel"></i> Filter
      </button>
      <!-- Filter Modal -->
      <div class="modal fade" id="filterSystemModal" tabindex="-1" aria-labelledby="filterSystemModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
          <div class="modal-content">
            <form id="systemFilterForm" method="get" action="/system/system">
              <!-- Preserve current pageSize and search -->
              <input type="hidden" name="pageSize" value="<%= typeof pageSize !== 'undefined' ? pageSize : 10 %>">
              <input type="hidden" name="search" value="<%= typeof search !== 'undefined' ? search : '' %>">
              <div class="modal-header">
                <h5 class="modal-title" id="filterSystemModalLabel">Filter System List</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
                <div class="row g-2">
                  <div class="col-12 mb-2">
                    <label class="form-label">Tags</label>
                    <select id="filterSystemTags" name="tags[]" class="form-control" multiple></select>
                  </div>
                  <div class="col-12 mb-2">
                    <label class="form-label">Contacts</label>
                    <select id="filterSystemContacts" name="contacts[]" class="form-control" multiple></select>
                  </div>
                  <div class="col-12 mb-2">
                    <label class="form-label">Scope user access</label>
                    <select id="filterSystemScopes" name="scopes[]" class="form-control" multiple></select>
                  </div>
                  <div class="col-12 mb-2">
                    <label class="form-label">Architecture</label>
                    <select id="filterSystemArchitecture" name="architectures[]" class="form-control" multiple></select>
                  </div>
                </div>
              </div>
              <div class="modal-footer d-flex justify-content-between">
                <button type="button" id="clearFilterBtnSystem" class="btn btn-outline-danger btn-sm">Clear All Filters</button>
                <div>
                  <button type="submit" class="btn btn-primary btn-sm">Apply Filter</button>
                  <button type="button" class="btn btn-outline-secondary btn-sm ms-2" data-bs-dismiss="modal">Close</button>
                </div>
              </div>
            </form>
          </div>
        </div>
      </div>
      <!-- Filter values for JS (an toàn cho EJS strict, giống IP Address List) -->
      <div id="filter-system-data"
        data-tags='<%= JSON.stringify(filterTags || []) %>'
        data-contacts='<%= JSON.stringify(filterContacts || []) %>'
        data-scopes='<%= JSON.stringify(filterScopes || []) %>'
        data-architecture='<%= JSON.stringify(filterArchitecture || []) %>' style="display:none"></div>
      

    </div>
  </div>
  <% // Declare pagination variables ONCE before the table, to avoid duplicate declaration errors and ReferenceError %>
  <% 
    let sysStartItem = (page - 1) * pageSize + 1;
    let sysEndItem = sysStartItem + (systemList ? systemList.length : 0) - 1;
    if (!systemList || systemList.length === 0) {
      sysStartItem = 0;
      sysEndItem = 0;
    }
    let sysStartPage = 1;
    let sysEndPage = totalPages;
    if (totalPages > 10) {
      if (page <= 5) {
        sysStartPage = 1;
        sysEndPage = 10;
      } else if (page + 4 >= totalPages) {
        sysStartPage = totalPages - 9;
        sysEndPage = totalPages;
      } else {
        sysStartPage = page - 5 + 1;
        sysEndPage = page + 4;
      }
    }
  %>
  <div class="row">
    <div class="col-12">
      <div class="card">
        <div class="card-header">
          <h3 class="card-title mb-0">System List</h3>
        </div>
        <div class="card-body table-responsive p-0">
          <table class="table table-hover">
            <thead>
              <tr>
                <th>No.</th>
                <th>System Code</th>
                <th>Name</th>
                <th>Description</th>
                <th>Alias</th>
                <th>Tags</th>
                <th>Scope user access</th>
                <th>Architecture</th>
                <th class="text-end">Actions</th>
              </tr>
            </thead>
            <tbody>
              <% if (systemList && systemList.length > 0) { %>
                <% systemList.forEach(function(system, idx) { %>
                  <tr>
                    <td><%= (page - 1) * pageSize + idx + 1 %></td>
                    <td><%= system.system_id %></td>
                    <td><%= system.name %></td>
                    <td>
                      <% if (system.description && system.description.trim()) { %>
                        <span title="<%= system.description.replace(/&/g, '&amp;').replace(/"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;') %>">
                          <%= system.description.length > 60 ? system.description.substring(0, 60) + '…' : system.description %>
                        </span>
                      <% } else { %>
                        <span class="text-muted">-</span>
                      <% } %>
                    </td>
                    <td>
                      <% if (Array.isArray(system.alias) && system.alias.length > 0) { %>
                        <%= system.alias.join(', ') %>
                      <% } else if (system.alias) { %>
                        <%= system.alias %>
                      <% } else { %>
                        <span class="text-muted">No alias</span>
                      <% } %>
                    </td>
                    <td>
                      <% if (system.tags && system.tags.length > 0) { %>
                        <div style="line-height: 1.4;">
                          <% system.tags.forEach(function(tag, idx) { %>
                            <span class="badge bg-primary text-white" style="font-size:1rem; font-weight:500; padding:0.15em 0.5em; margin: 0.1em 0.1em; display: inline-block;">
                              <%= tag.name %>
                            </span>
                            <% if ((idx + 1) % 2 === 0 && idx < system.tags.length - 1) { %>
                              <br>
                            <% } %>
                          <% }) %>
                        </div>
                      <% } else { %>
                        <span class="text-muted">No tags</span>
                      <% } %>
                    </td>
                    <td>
                      <% if (system.scopes && system.scopes.length > 0) { %>
                        <div style="line-height: 1.4;">
                          <% system.scopes.forEach(function(scope, idx) { %>
                            <span class="badge bg-info text-white" style="font-size:1rem; font-weight:500; padding:0.15em 0.5em; margin: 0.1em 0.1em; display: inline-block;">
                              <%= scope %>
                            </span>
                            <% if ((idx + 1) % 2 === 0 && idx < system.scopes.length - 1) { %>
                              <br>
                            <% } %>
                          <% }) %>
                        </div>
                      <% } else { %>
                        <span class="text-muted">No scope</span>
                      <% } %>
                    </td>
                    <td>
                      <% if (system.architecture && system.architecture.length > 0) { %>
                        <div style="line-height: 1.4;">
                          <% system.architecture.forEach(function(arch, idx) { %>
                            <span class="badge bg-warning text-dark" style="font-size:1rem; font-weight:500; padding:0.15em 0.5em; margin: 0.1em 0.1em; display: inline-block;">
                              <%= arch %>
                            </span>
                            <% if ((idx + 1) % 2 === 0 && idx < system.architecture.length - 1) { %>
                              <br>
                            <% } %>
                          <% }) %>
                        </div>
                      <% } else { %>
                        <span class="text-muted">No architecture</span>
                      <% } %>
                    </td>

                    <td class="text-end">
                      <button type="button" class="btn btn-info btn-sm" title="Show" data-bs-toggle="modal" data-bs-target="#systemDetailModal-<%= system.id %>" data-system='<%= JSON.stringify(system) %>'><i class="bi bi-eye"></i></button>
                      <% if (hasPermission('system.update')) { %>
                      <a href="/system/system/<%= system.id %>/edit" class="btn btn-warning btn-sm" title="Edit"><i class="bi bi-pencil"></i></a>
                      <% } %>
                      <% if (hasPermission('system.delete')) { %>
                      <form action="/system/system/<%= system.id %>/delete" method="POST" style="display:inline" onsubmit="return confirmDeleteSystem(this, '<%= system.name %>')">
                        <button type="submit" class="btn btn-danger btn-sm" title="Delete">
                          <i class="bi bi-trash"></i>
                        </button>
                      </form>
                      <% } %>
                    </td>
                  </tr>
                  <!-- System Detail Modal -->
                  <div class="modal fade" id="systemDetailModal-<%= system.id %>" tabindex="-1" aria-labelledby="systemDetailModalLabel-<%= system.id %>" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                      <div class="modal-content">
                        <div class="modal-header">
                          <h5 class="modal-title" id="systemDetailModalLabel-<%= system.id %>">System Detail</h5>
                          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                          <dl class="row mb-0">
                            <dt class="col-sm-3">ID (DB)</dt>
                            <dd class="col-sm-9"><%= typeof system.id !== 'undefined' && system.id !== null ? system.id : 'No data' %></dd>
                            <dt class="col-sm-3">System Code</dt>
                            <dd class="col-sm-9"><%= system.system_id || 'No data' %></dd>
                            <dt class="col-sm-3">System Name</dt>
                            <dd class="col-sm-9"><%= system.name || 'No data' %></dd>
                            <dt class="col-sm-3">Level</dt>
                            <dd class="col-sm-9"><%= system.level || 'No data' %></dd>
                            <dt class="col-sm-3">Manager(s)</dt>
                            <dd class="col-sm-9">
                              <% if (system.contacts && system.contacts.length > 0) { %>
                                <% system.contacts.forEach(function(contact, idx) { %>
                                  <% if (contact.email) { %>
                                    <a href="/organize/contact?search=<%= encodeURIComponent(contact.email) %>" target="_blank"><%= contact.email %></a><%= idx < system.contacts.length - 1 ? ', ' : '' %>
                                  <% } else { %>
                                    <span class="text-muted">No email</span><%= idx < system.contacts.length - 1 ? ', ' : '' %>
                                  <% } %>
                                <% }) %>
                              <% } else { %>
                                No manager
                              <% } %>
                            </dd>
                            <dt class="col-sm-3">Department</dt>
                            <dd class="col-sm-9">
                              <% if (system.department_name) { %>
                                <a href="/organize/unit?search=<%= encodeURIComponent(system.department_name) %>" target="_blank"><%= system.department_name %></a>
                              <% } else { %>
                                <span class="text-muted">No data</span>
                              <% } %>
                            </dd>
                            <dt class="col-sm-3">Alias</dt>
                            <dd class="col-sm-9">
                              <% if (Array.isArray(system.alias) && system.alias.length > 0) { %>
                                <%= system.alias.join(', ') %>
                              <% } else if (system.alias) { %>
                                <%= system.alias %>
                              <% } else { %>
                                <span class="text-muted">No alias</span>
                              <% } %>
                            </dd>
                            <dt class="col-sm-3">FQDN</dt>
                            <dd class="col-sm-9">
                              <% if (Array.isArray(system.fqdn) && system.fqdn.length > 0) { %>
                                <ul class="mb-0 ps-3" style="list-style: disc inside;">
                                  <% system.fqdn.forEach(function(f) { %>
                                    <li>
                                      <% if (/^https?:\/\//.test(f)) { %>
                                        <a href="<%= f %>" target="_blank" rel="noopener noreferrer"><%= f %></a>
                                      <% } else { %>
                                        <code><%= f %></code>
                                      <% } %>
                                    </li>
                                  <% }) %>
                                </ul>
                              <% } else { %>
                                <span class="text-muted">No FQDN</span>
                              <% } %>
                            </dd>
                            <dt class="col-sm-3">Tags</dt>
                            <dd class="col-sm-9">
                              <% if (system.tags && system.tags.length > 0) { %>
                                <% system.tags.forEach(function(tag) { %>
                                  <span class="badge bg-primary text-white" style="font-size:1rem; font-weight:500; padding:0.15em 0.5em;"><%= tag.name %></span>
                                <% }) %>
                              <% } else { %>
                                <span class="text-muted">No tags</span>
                              <% } %>
                            </dd>
                            <dt class="col-sm-3">Scope user access</dt>
                            <dd class="col-sm-9">
                              <% if (system.scopes && system.scopes.length > 0) { %>
                                <% system.scopes.forEach(function(scope) { %>
                                  <span class="badge bg-info text-white" style="font-size:1rem; font-weight:500; padding:0.15em 0.5em;"><%= scope %></span>
                                <% }) %>
                              <% } else { %>
                                <span class="text-muted">No specific scope defined</span>
                              <% } %>
                            </dd>
                            <dt class="col-sm-3">Architecture</dt>
                            <dd class="col-sm-9">
                              <% if (system.architecture && system.architecture.length > 0) { %>
                                <% system.architecture.forEach(function(arch) { %>
                                  <span class="badge bg-warning text-dark" style="font-size:1rem; font-weight:500; padding:0.15em 0.5em;"><%= arch %></span>
                                <% }) %>
                              <% } else { %>
                                <span class="text-muted">No specific architecture defined</span>
                              <% } %>
                            </dd>
                            <dt class="col-sm-3">Created At</dt>
                            <dd class="col-sm-9"><%= system.created_at ? (system.created_at.toLocaleString ? system.created_at.toLocaleString() : system.created_at) : 'No data' %></dd>
                            <dt class="col-sm-3">Updated At</dt>
                            <dd class="col-sm-9"><%= system.updated_at ? (system.updated_at.toLocaleString ? system.updated_at.toLocaleString() : system.updated_at) : '<span class="text-muted">No data</span>' %></dd>
                            <dt class="col-sm-3">Updated By</dt>
                            <dd class="col-sm-9"><%= system.updated_by || '<span class="text-muted">No data</span>' %></dd>
                            <dt class="col-sm-3">Description</dt>
                            <dd class="col-sm-9">
                              <% if (system.description) { %>
                                <span class="desc-text"><%- system.description.replace(/\n/g, '<br>') %></span>
                              <% } else { %>
                                <span class="text-muted">No data</span>
                              <% } %>
                            </dd>
                          </dl>
                          <hr>
                          <h6>IP Addresses</h6>
                          <ul>
                            <% if (system.ip_addresses && system.ip_addresses.length > 0) { %>
                              <% 
                                // Sort IP addresses by environment
                                const sortedIPs = system.ip_addresses.sort((a, b) => {
                                  const envA = (typeof a === 'object' && a.subnet_environment) ? a.subnet_environment : '';
                                  const envB = (typeof b === 'object' && b.subnet_environment) ? b.subnet_environment : '';
                                  return envA.localeCompare(envB);
                                });
                              %>
                              <% sortedIPs.forEach(function(ipObj) { %>
                                <li>
                                  <% if (typeof ipObj === 'object' && ipObj.ip) { %>
                                    <a href="/network/ip-address?search=<%= encodeURIComponent(ipObj.ip) %>" 
                                       target="_blank" 
                                       class="ip-hover-link" 
                                       data-ip="<%= ipObj.ip %>"
                                       title="Loading IP info...">
                                      <%= ipObj.ip %>
                                      <% if (ipObj.subnet_environment || ipObj.subnet_zone) { %>
                                        <span class="badge bg-secondary ms-1">
                                          [<%= ipObj.subnet_environment || 'N/A' %> - <%= ipObj.subnet_zone || 'N/A' %>]
                                        </span>
                                      <% } %>
                                    </a>
                                  <% } else { %>
                                    <span class="ip-hover-link" 
                                          data-ip="<%= ipObj %>"
                                          title="Loading IP info..."><%= ipObj %></span>
                                  <% } %>
                                </li>
                              <% }) %>
                            <% } else { %>
                              <li>No IPs</li>
                            <% } %>
                          </ul>
                          <h6>Domains</h6>
                          <ul>
                            <% if (system.domains && system.domains.length > 0) { %>
                              <% system.domains.forEach(function(domain) { %>
                                <li>
                                  <% if (typeof domain === 'object' && domain.domain) { %>
                                    <a href="/network/domain?search=<%= encodeURIComponent(domain.domain) %>" target="_blank"><%= domain.domain %></a>
                                  <% } else { %>
                                    <%= domain %>
                                  <% } %>
                                </li>
                              <% }) %>
                            <% } else { %>
                              <li>No domains</li>
                            <% } %>
                          </ul>
                          <h6>System Documents</h6>
                          <ul class="mb-3">
                            <% if (system.docs && system.docs.length > 0) { %>
                              <% system.docs.forEach(function(doc) { %>
                                <li>
                                  <a href="<%= doc.url %>" target="_blank">
                                    <i class="bi bi-file-earmark-text"></i> <%= doc.name %>
                                  </a>
                                </li>
                              <% }) %>
                            <% } else { %>
                              <li>No documents</li>
                            <% } %>
                          </ul>
                          <hr>
                          <h6 class="text-center fw-bold">Component List</h6>
                          <div id="component-list-<%= system.id %>">
                            <div class="text-muted">Loading components...</div>
                          </div>
                        </div>
                        <div class="modal-footer">
                          <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Close</button>
                        </div>
                      </div>
                    </div>
                  </div>

                <% }) %>
              <% } else { %>
                <tr><td colspan="8" class="text-center">No data</td></tr>
              <% } %>
            </tbody>
          </table>
        </div>
        <div class="card-footer clearfix">
          <div class="d-flex justify-content-between align-items-center px-3 pb-2" style="padding-top: 1rem;">
            <div>
              <% 
                // Only declare these variables ONCE at the top of the file or before the table, not here again
                // So here, just use sysStartItem, sysEndItem, sysStartPage, sysEndPage if already declared
              %>
              <span>Showing <%= sysStartItem %> - <%= sysEndItem %> of <%= typeof totalCount !== 'undefined' ? totalCount : 0 %> systems</span>
            </div>
            <ul class="pagination pagination-sm m-0 float-end">
              <% 
                function buildFilterQuery() {
                  let params = [];
                  if (typeof search !== 'undefined' && search) params.push('search=' + encodeURIComponent(search));
                  if (typeof pageSize !== 'undefined' && pageSize) params.push('pageSize=' + encodeURIComponent(pageSize));
                  if (typeof filterTags !== 'undefined' && filterTags.length) filterTags.forEach(function(tag) { params.push('tags[]=' + encodeURIComponent(tag)); });
                  if (typeof filterContacts !== 'undefined' && filterContacts.length) filterContacts.forEach(function(c) { params.push('contacts[]=' + encodeURIComponent(c)); });
                  if (typeof filterScopes !== 'undefined' && filterScopes.length) filterScopes.forEach(function(scope) { params.push('scopes[]=' + encodeURIComponent(scope)); });
                  if (typeof filterArchitecture !== 'undefined' && filterArchitecture.length) filterArchitecture.forEach(function(arch) { params.push('architectures[]=' + encodeURIComponent(arch)); });
                  return params.join('&');
                }
                const filterQuery = buildFilterQuery();
              %>
              <li class="page-item <%= page <= 1 ? 'disabled' : '' %>">
                <a class="page-link" href="?page=<%= page - 1 %><%= filterQuery ? '&' + filterQuery : '' %>" tabindex="-1">Previous</a>
              </li>
              <% if (sysStartPage > 1) { %>
                <li class="page-item"><a class="page-link" href="?page=1<%= filterQuery ? '&' + filterQuery : '' %>">1</a></li>
                <% if (sysStartPage > 2) { %>
                  <li class="page-item disabled"><span class="page-link">...</span></li>
                <% } %>
              <% } %>
              <% for (let i = sysStartPage; i <= sysEndPage; i++) { %>
                <li class="page-item <%= i === page ? 'active' : '' %>"><a class="page-link" href="?page=<%= i %><%= filterQuery ? '&' + filterQuery : '' %>"><%= i %></a></li>
              <% } %>
              <% if (sysEndPage < totalPages) { %>
                <li class="page-item disabled"><span class="page-link">...</span></li>
                <li class="page-item"><a class="page-link" href="?page=<%= totalPages %><%= filterQuery ? '&' + filterQuery : '' %>"><%= totalPages %></a></li>
              <% } %>
              <li class="page-item <%= page >= totalPages ? 'disabled' : '' %>">
                <a class="page-link" href="?page=<%= page + 1 %><%= filterQuery ? '&' + filterQuery : '' %>">Next</a>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
<!-- Load jQuery and Select2 first -->
<script src="/vendor/jquery-3.6.0.min.js"></script>
<link href="/vendor/select2.min.css" rel="stylesheet" />
<link href="/css/select2-bootstrap-5-theme.min.css" rel="stylesheet" />
<script src="/vendor/select2.min.js"></script>
<script src="/vendor/bootstrap.min.js"></script>
<link rel="stylesheet" href="/vendor/fontawesome/css/all.min.css" />

<style>
  /* IP hover tooltip styling */
  .ip-hover-link {
    cursor: pointer;
    border-bottom: 1px dotted #007bff;
    text-decoration: none;
  }
  
  .ip-hover-link:hover {
    text-decoration: none;
    border-bottom: 1px dotted #0056b3;
  }
  
  /* Custom tooltip styling for better readability */
  .ip-hover-link[title] {
    position: relative;
  }
  
  /* Ensure tooltips are visible above modals */
  .modal .ip-hover-link[title] {
    z-index: 1060;
  }
</style>



<!-- Data attributes for JavaScript -->
<div id="system-data" 
     data-scope-options='<%= JSON.stringify(scopeOptions || []) %>'
     data-architecture-options='<%= JSON.stringify(architectureOptions || []) %>'
     style="display: none;"></div>

<script>
    // Khai báo data cho Select2 options - load động từ database
    const systemDataEl = document.getElementById('system-data');
    window.scopeOptionsData = JSON.parse(systemDataEl.dataset.scopeOptions || '[]');
    window.architectureOptionsData = JSON.parse(systemDataEl.dataset.architectureOptions || '[]');
    
    

    
    function confirmDeleteSystem(form, name) {
      if (confirm('Are you sure you want to delete the system: ' + name + '?')) {
        form._deleting = true;
        return true;
      }
      return false;
    }

    function showToast(msg, type) {
      const toast = document.createElement('div');
      toast.className = `alert alert-${type}`;
      toast.style.position = 'fixed';
      toast.style.top = '16px';
      toast.style.right = '16px';
      toast.style.zIndex = 9999;
      toast.style.minWidth = '200px';
      toast.innerText = msg;
      document.body.appendChild(toast);
      setTimeout(() => toast.remove(), 3000);
    }

    // Filter modal select2 logic
    function restoreSelect2Value($el, values, url) {
      if (!values || !values.length) {
        return;
      }
      
      $.ajax({
        url: url,
        data: { ids: values },
        dataType: 'json',
        traditional: true,
        xhrFields: {
          withCredentials: true
        },
        success: function(data) {
          if (!data || !Array.isArray(data)) {
            return;
          }
          
          data.forEach(function(item) {
            if ($el.find('option[value="' + item.id + '"]').length === 0) {
              var option = new Option(item.text || item.name, item.id, true, true);
              $el.append(option);
            }
          });
          
          // Use setTimeout to ensure options are added before setting values
          setTimeout(function() {
            $el.val(values).trigger('change');
          }, 100);
        },
        error: function(xhr, status, error) {
          // Silent error handling
        }
      });
    }

    $(function() {
      var $filterModal = $('#filterSystemModal');
      var $modalContent = $filterModal.find('.modal-content');
      
      var filterValues = {
        tags: JSON.parse(document.getElementById('filter-system-data').dataset.tags || '[]'),
        contacts: JSON.parse(document.getElementById('filter-system-data').dataset.contacts || '[]'),
        scopes: JSON.parse(document.getElementById('filter-system-data').dataset.scopes || '[]'),
        architecture: JSON.parse(document.getElementById('filter-system-data').dataset.architecture || '[]')
      };
      
      $('#filterSystemTags').select2({
        theme: 'bootstrap-5',
        placeholder: 'Select tag(s)',
        allowClear: true,
        width: '100%',
        dropdownParent: $modalContent,
        ajax: {
          url: '/organize/api/tag',
          dataType: 'json',
          delay: 250,
          data: params => ({ search: params.term }),
          processResults: data => ({ results: data })
        }
      });
      $('#filterSystemContacts').select2({
        theme: 'bootstrap-5',
        placeholder: 'Select contact(s)',
        allowClear: true,
        width: '100%',
        dropdownParent: $modalContent,
        ajax: {
          url: '/organize/api/contact',
          dataType: 'json',
          delay: 250,
          data: params => ({ search: params.term }),
          processResults: data => ({ results: data })
        }
      });
      // Tạo Select2 trực tiếp với data từ backend
      $('#filterSystemScopes').select2({
        theme: 'bootstrap-5',
        placeholder: 'Select scope(s)',
        allowClear: true,
        width: '100%',
        dropdownParent: $modalContent,
        data: window.scopeOptionsData || [],
        // Sử dụng format {id, text} mặc định của Select2
      });
      
      // Tạo Select2 trực tiếp với data từ backend
      $('#filterSystemArchitecture').select2({
        theme: 'bootstrap-5',
        placeholder: 'Select architecture(s)',
        allowClear: true,
        width: '100%',
        dropdownParent: $modalContent,
        data: window.architectureOptionsData || [],
        // Sử dụng format {id, text} mặc định của Select2
      });
      

      // Restore all filter values with proper timing
      setTimeout(function() {
        // Restore tags
        if (filterValues.tags && filterValues.tags.length > 0) {
          restoreSelect2Value($('#filterSystemTags'), filterValues.tags, '/organize/api/tag/ids');
        }
        
        // Restore contacts
        if (filterValues.contacts && filterValues.contacts.length > 0) {
          restoreSelect2Value($('#filterSystemContacts'), filterValues.contacts, '/organize/api/contact/ids');
        }
      }, 500);
      
      
      // Also restore when modal is shown
      $filterModal.on('shown.bs.modal', function() {
        setTimeout(function() {
          // Restore tags
          if (filterValues.tags && filterValues.tags.length > 0) {
            restoreSelect2Value($('#filterSystemTags'), filterValues.tags, '/organize/api/tag/ids');
          }
          
          // Restore contacts
          if (filterValues.contacts && filterValues.contacts.length > 0) {
            restoreSelect2Value($('#filterSystemContacts'), filterValues.contacts, '/organize/api/contact/ids');
          }
        }, 200);
      });
      
      // Restore scope and architecture values - need to add options first
      if (filterValues.scopes && filterValues.scopes.length > 0) {
        // Add options to scope select if they don't exist
        filterValues.scopes.forEach(function(scopeValue) {
          if ($('#filterSystemScopes').find('option[value="' + scopeValue + '"]').length === 0) {
            const option = new Option(scopeValue, scopeValue, true, true);
            $('#filterSystemScopes').append(option);
          }
        });
        // Use setTimeout to ensure Select2 is fully initialized
        setTimeout(function() {
          $('#filterSystemScopes').val(filterValues.scopes).trigger('change');
        }, 100);
      }
      
      if (filterValues.architecture && filterValues.architecture.length > 0) {
        // Add options to architecture select if they don't exist
        filterValues.architecture.forEach(function(archValue) {
          if ($('#filterSystemArchitecture').find('option[value="' + archValue + '"]').length === 0) {
            const option = new Option(archValue, archValue, true, true);
            $('#filterSystemArchitecture').append(option);
          }
        });
        // Use setTimeout to ensure Select2 is fully initialized
        setTimeout(function() {
          $('#filterSystemArchitecture').val(filterValues.architecture).trigger('change');
        }, 100);
      }
      

      // Clear Filter button
      $('#clearFilterBtnSystem').on('click', function() {
        // Clear all select2 values
        $('#filterSystemTags').val(null).trigger('change');
        $('#filterSystemContacts').val(null).trigger('change');
        $('#filterSystemScopes').val(null).trigger('change');
        $('#filterSystemArchitecture').val(null).trigger('change');
        // Close modal
        $filterModal.modal('hide');
        // Redirect to clean URL but preserve pageSize and search
        const currentPageSize = $('select[name="pageSize"]').val() || '10';
        const currentSearch = $('input[name="search"]').val() || '';
        let cleanUrl = '/system/system';
        const params = [];
        if (currentPageSize && currentPageSize !== '10') params.push('pageSize=' + encodeURIComponent(currentPageSize));
        if (currentSearch) params.push('search=' + encodeURIComponent(currentSearch));
        if (params.length > 0) cleanUrl += '?' + params.join('&');
        window.location.href = cleanUrl;
      });
      

    });
    // AJAX load component list for system detail modal
    document.addEventListener('DOMContentLoaded', function() {
      // Attach event for all show system detail buttons
      document.querySelectorAll('button[data-bs-target^="#systemDetailModal-"]').forEach(function(btn) {
        btn.addEventListener('click', function() {
          let system = null;
          try {
            system = JSON.parse(this.getAttribute('data-system'));
          } catch (e) {}
          const systemId = system && system.id ? system.id : this.getAttribute('data-bs-target').replace('#systemDetailModal-', '');
          const container = document.getElementById('component-list-' + systemId);
          if (!container) return;
          container.innerHTML = '<div class="text-muted">Loading components...</div>';
          fetch(`/system/api/system/${systemId}/components`)
            .then(res => res.json())
            .then(data => {
              if (!data.components || !Array.isArray(data.components) || data.components.length === 0) {
                container.innerHTML = '<div class="text-muted">No components</div>';
                return;
              }
              let html = '';
              data.components.forEach((c, idx) => {
                if (idx > 0) html += '<hr class="my-2">';
                html += `<div style='font-size: 0.93em;'>`;
                if (c.name) {
                  html += `<div>Name: <a href='/system/component?search=${encodeURIComponent(c.name)}&pageSize=10' target='_blank'>${c.name}</a></div>`;
                } else {
                  html += `<div>Name: (no name)</div>`;
                }
                html += `<div>App type: ${c.app_type ? `<span class='badge bg-secondary ms-2'>${c.app_type}</span>` : '-'}</div>`;
                html += `<div>Description: <span class='text-muted small'>${c.description ? c.description.replace(/</g,'&lt;').replace(/>/g,'&gt;') : '-'}</span></div>`;
                if (c.tags && c.tags.length > 0) {
                  html += `<div>Tags: ` + c.tags.map(tag => `<span class='badge bg-primary text-white me-1' style='font-size:0.93em; padding:0.15em 0.5em;'>${tag.name}</span>`).join('') + `</div>`;
                } else {
                  html += `<div>Tags: <span class='text-muted'>no tags</span></div>`;
                }
                if (c.fqdn && Array.isArray(c.fqdn) && c.fqdn.length > 0) {
                  html += `<div>FQDN: ${c.fqdn.map(f=>`<code>${f}</code>`).join(', ')}</div>`;
                }
                if (c.ips && Array.isArray(c.ips) && c.ips.length > 0) {
                  html += `<div>IP: ` + c.ips.map(ipObj => {
                    if (typeof ipObj === 'object' && ipObj.ip) {
                      return `<a href='/network/ip-address?search=${encodeURIComponent(ipObj.ip)}' target='_blank' class='ip-hover-link' data-ip='${ipObj.ip}' title='Loading IP info...'>${ipObj.ip}</a>`;
                    } else {
                      return `<span class='ip-hover-link' data-ip='${ipObj}' title='Loading IP info...'>${ipObj}</span>`;
                    }
                  }).join(', ') + `</div>`;
                }
                html += '</div>';
              });
              container.innerHTML = html;
              
              // Attach IP hover events to the newly loaded content
              attachIPHoverEvents();
            })
            .catch(() => {
              container.innerHTML = '<div class="text-danger">Error loading components</div>';
            });
        });
      });
      
      // Attach IP hover events to existing content
      attachIPHoverEvents();
    });
    
    // Function to attach IP hover events
    function attachIPHoverEvents() {
      document.querySelectorAll('.ip-hover-link').forEach(function(element) {
        // Remove existing event listeners to avoid duplicates
        element.removeEventListener('mouseenter', handleIPHover);
        element.removeEventListener('mouseleave', handleIPLeave);
        
        // Add new event listeners
        element.addEventListener('mouseenter', handleIPHover);
        element.addEventListener('mouseleave', handleIPLeave);
      });
    }
    
    // IP hover handler
    function handleIPHover(event) {
      const element = event.target;
      const ipAddress = element.getAttribute('data-ip');
      
      if (!ipAddress || element.getAttribute('data-loading') === 'true') {
        return;
      }
      
      // Set loading state
      element.setAttribute('data-loading', 'true');
      element.setAttribute('title', 'Loading IP info...');
      
      // Fetch IP information
      fetch(`/network/api/ip-addresses/detail?search=${encodeURIComponent(ipAddress)}`)
        .then(response => response.json())
        .then(data => {
          if (data && data.length > 0) {
            const ipInfo = data[0];
            let tooltipText = `IP: ${ipInfo.ip_address || ipInfo.ip || ipAddress}`;
            
            if (ipInfo.description) {
              tooltipText += `\nDescription: ${ipInfo.description}`;
            }
            
            if (ipInfo.status) {
              tooltipText += `\nStatus: ${ipInfo.status}`;
            }
            
            if (ipInfo.server_name) {
              tooltipText += `\nServer: ${ipInfo.server_name}`;
            }
            
            if (ipInfo.device_name) {
              tooltipText += `\nDevice: ${ipInfo.device_name}`;
            }
            
            // Add tags information
            if (ipInfo.tags && ipInfo.tags.length > 0) {
              const tagNames = ipInfo.tags.map(tag => tag.name).join(', ');
              tooltipText += `\nTags: ${tagNames}`;
            }
            
            // Add contacts information
            if (ipInfo.contacts && ipInfo.contacts.length > 0) {
              const contactEmails = ipInfo.contacts.map(contact => contact.email || contact.name).join(', ');
              tooltipText += `\nContacts: ${contactEmails}`;
            }
            
            // Add systems information
            if (ipInfo.systems && ipInfo.systems.length > 0) {
              const systemNames = ipInfo.systems.map(system => system.name).join(', ');
              tooltipText += `\nSystems: ${systemNames}`;
            }
            
            element.setAttribute('title', tooltipText);
          } else {
            element.setAttribute('title', `IP: ${ipAddress}\nNo additional information found`);
          }
        })
        .catch(error => {
          console.error('Error fetching IP info:', error);
          element.setAttribute('title', `IP: ${ipAddress}\nError loading information`);
        })
        .finally(() => {
          element.removeAttribute('data-loading');
        });
    }
    
    // IP leave handler
    function handleIPLeave(event) {
      // Optional: Reset tooltip or do cleanup
    }
</script>
<% if (success) { %>
  <script>
    window.addEventListener('DOMContentLoaded', function() {
      showToast('<%= success %>', 'success');
    });
  </script>
<% } %>
<% if (error) { %>
  <script>
    window.addEventListener('DOMContentLoaded', function() {
      showToast('<%= error %>', 'danger');
    });
  </script>
<% } %>
