<div class="container-fluid">
  <form class="input-group mb-3 justify-content-end align-items-center" role="search" method="get" action="/network/subnet-address" style="margin-top: 2.5rem; margin-right: 0.5rem; max-width: 500px; margin-left: auto;">
    <input class="form-control rounded-start me-2" type="search" name="search" placeholder="Search Subnet or Description..." aria-label="Search" value="<%= typeof search !== 'undefined' ? search : '' %>">
    <select class="form-select form-select-sm me-2" name="pageSize" onchange="this.form.submit()" style="width:90px;max-width:90px;">
      <% (pageSizeOptions || [10,20,50]).forEach(function(size) { %>
        <option value="<%= size %>" <%= pageSize == size ? 'selected' : '' %>><%= size %> / page</option>
      <% }) %>
    </select>
    <button class="btn btn-outline-secondary rounded-end" type="submit"><i class="bi bi-search"></i></button>
  </form>
  <div class="row mb-3">
    <div class="col-12 d-flex justify-content-end align-items-center" style="margin-top: 16px;">
      <% if (hasPermission('subnet.create')) { %>
        <button type="button" class="btn btn-primary btn-sm me-2" data-bs-toggle="modal" data-bs-target="#addSubnetModal">
          <i class="bi bi-plus"></i> Add Subnet
        </button>
      <% } %>
      <!-- Add Subnet Modal -->
      <div class="modal fade" id="addSubnetModal" tabindex="-1" aria-labelledby="addSubnetModalLabel" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="addSubnetModalLabel">Add Subnet</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <form id="addSubnetForm" action="/network/subnet-address" method="POST">
                <div class="mb-3">
                  <label for="subnetAddress" class="form-label">Subnet Address <span class="text-danger">*</span></label>
                  <input type="text" class="form-control form-control-sm" id="subnetAddress" name="address" placeholder="Subnet Address (e.g. 192.168.1.0/24)" required>
                </div>
                <div class="mb-3">
                  <label for="subnetDescription" class="form-label">Description</label>
                  <textarea class="form-control" id="subnetDescription" name="description" placeholder="Description" rows="4"></textarea>
                </div>
                <div class="mb-3">
                  <label for="addSubnetTags" class="form-label">Tags</label>
                  <select id="addSubnetTags" name="tags[]" class="form-control" multiple></select>
                </div>
              </form>
            </div>
            <div class="modal-footer d-flex justify-content-end">
              <button type="button" class="btn btn-outline-secondary btn-sm me-2" data-bs-dismiss="modal">Close</button>
              <button type="submit" class="btn btn-primary btn-sm" form="addSubnetForm">Add Subnet</button>
            </div>
          </div>
        </div>
      </div>
      <form action="/network/subnet-address/export" method="GET" style="display:inline;">
        <input type="hidden" name="search" value="<%= typeof search !== 'undefined' ? search : '' %>">
        <% if (typeof filterTags !== 'undefined' && filterTags.length) { filterTags.forEach(function(tag) { %>
          <input type="hidden" name="tags[]" value="<%= tag %>">
        <% }) } %>
        <button type="submit" class="btn btn-warning btn-sm">
          <i class="bi bi-download"></i> Export
        </button>
      </form>
      <button type="button" class="btn btn-secondary btn-sm ms-2" data-bs-toggle="modal" data-bs-target="#filterSubnetModal">
        <i class="bi bi-funnel"></i> Filter
      </button>
      <!-- Filter Modal -->
      <div class="modal fade" id="filterSubnetModal" tabindex="-1" aria-labelledby="filterSubnetModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
          <div class="modal-content">
            <form id="subnetFilterForm" method="get" action="/network/subnet-address">
              <!-- Preserve current pageSize and search -->
              <input type="hidden" name="pageSize" value="<%= typeof pageSize !== 'undefined' ? pageSize : 10 %>">
              <input type="hidden" name="search" value="<%= typeof search !== 'undefined' ? search : '' %>">
              <div class="modal-header">
                <h5 class="modal-title" id="filterSubnetModalLabel">Filter Subnet List</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
                <div class="row g-2">
                  <div class="col-12 mb-2">
                    <label class="form-label">Tags</label>
                    <select id="filterSubnetTags" name="tags[]" class="form-control" multiple></select>
                  </div>
                </div>
              </div>
              <div class="modal-footer d-flex justify-content-between">
                <button type="button" id="clearFilterBtnSubnet" class="btn btn-outline-danger btn-sm">Clear All Filters</button>
                <div>
                  <button type="submit" class="btn btn-primary btn-sm">Apply Filter</button>
                  <button type="button" class="btn btn-outline-secondary btn-sm ms-2" data-bs-dismiss="modal">Close</button>
                </div>
              </div>
            </form>
          </div>
        </div>
      </div>
      <!-- Filter values for JS (an toàn cho EJS strict) -->
      <div id="filter-subnet-data"
        data-tags='<%= JSON.stringify(filterTags || []) %>' style="display:none"></div>
    </div>
  </div>
  <div class="row">
    <div class="col-12">
      <div class="card">
        <div class="card-header">
          <h3 class="card-title mb-0">Subnet List</h3>
        </div>
        <div class="card-body table-responsive p-0">
          <table class="table table-hover text-nowrap">
            <thead>
              <tr>
                <th>No.</th>
                <th>Subnet Address</th>
                <th>Description</th>
                <th>Tags</th>
                <th class="text-end">Actions</th>
              </tr>
            </thead>
            <% function renderSubnetTree(tree, level, counter) { %>
              <% tree.forEach(function(subnet) { %>
                <tr>
                  <td><%= counter.value++ %></td>
                  <td><%= (level > 0 ? '- '.repeat(level) : '') + subnet.address %></td>
                  </td>
                  <td>
                    <% if (subnet.description && subnet.description.trim()) { %>
                      <span title="<%= subnet.description.replace(/&/g, '&amp;').replace(/"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;') %>">
                        <%= subnet.description.length > 60 ? subnet.description.substring(0, 60) + '…' : subnet.description %>
                      </span>
                    <% } else { %>
                      <span class="text-muted">-</span>
                    <% } %>
                  </td>
                  <td>
                    <% if (subnet.tags && subnet.tags.length > 0) { %>
                      <div style="line-height: 1.4;">
                        <% subnet.tags.forEach(function(tag, idx) { %>
                          <span class="badge bg-primary text-white" style="font-size:1rem; font-weight:500; padding:0.15em 0.5em; margin: 0.1em 0.1em; display: inline-block;"><%= tag.name %></span>
                          <% if ((idx + 1) % 2 === 0 && idx < subnet.tags.length - 1) { %>
                            <br>
                          <% } %>
                        <% }) %>
                      </div>
                    <% } else { %>
                      <span class="text-muted">No tags</span>
                    <% } %>
                  </td>
                  <td class="text-end">
                    <a href="#" class="btn btn-info btn-sm" title="Show" data-bs-toggle="modal" data-bs-target="#subnetDetailModal-<%= subnet.id %>" data-subnet-detail-btn="<%= subnet.id %>"><i class="bi bi-eye"></i></a>
                    <% if (hasPermission('subnet.edit')) { %>
                      <a href="#" class="btn btn-warning btn-sm" title="Edit" data-bs-toggle="modal" data-bs-target="#subnetEditModal-<%= subnet.id %>"><i class="bi bi-pencil"></i></a>
                    <% } %>
                    <% if (hasPermission('subnet.delete')) { %>
                      <form action="/network/subnet-address/<%= subnet.id %>?_method=DELETE" method="POST" style="display:inline">
                        <button type="submit" class="btn btn-danger btn-sm" title="Delete" onclick="return confirm('Are you sure?')"><i class="bi bi-trash"></i></button>
                      </form>
                    <% } %>
                  </td>
                </tr>
                <!-- Subnet Detail Modal -->
                <div class="modal fade" id="subnetDetailModal-<%= subnet.id %>" tabindex="-1" aria-labelledby="subnetDetailModalLabel-<%= subnet.id %>" aria-hidden="true">
                  <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="subnetDetailModalLabel-<%= subnet.id %>">Subnet Information</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                      </div>
                      <div class="modal-body">
                        <dl class="row mb-0">
                          <dt class="col-sm-3">Subnet ID</dt>
                          <dd class="col-sm-9 text-monospace" id="subnet-id-<%= subnet.id %>"><%= subnet.id %></dd>
                          <dt class="col-sm-3">Address</dt>
                          <dd class="col-sm-9" data-field="address"></dd>
                          <dt class="col-sm-3">Description</dt>
                          <dd class="col-sm-9" data-field="description"></dd>
                          <dt class="col-sm-3">Tags</dt>
                          <dd class="col-sm-9">
                            <% if (subnet.tags && subnet.tags.length > 0) { %>
                              <div style="line-height: 1.4;">
                                <% subnet.tags.forEach(function(tag, idx) { %>
                                  <span class="badge bg-primary text-white" style="font-size:1rem; font-weight:500; padding:0.15em 0.5em; margin: 0.1em 0.1em; display: inline-block;"><%= tag.name %></span>
                                  <% if ((idx + 1) % 2 === 0 && idx < subnet.tags.length - 1) { %>
                                    <br>
                                  <% } %>
                                <% }) %>
                              </div>
                            <% } else { %>
                              <span class="text-muted">No tags</span>
                            <% } %>
                          </dd>
                          <dt class="col-sm-3">Created At</dt>
                          <dd class="col-sm-9" data-field="created_at"></dd>
                          <dt class="col-sm-3">Updated At</dt>
                          <dd class="col-sm-9" data-field="updated_at"></dd>
                          <dt class="col-sm-3">Updated By</dt>
                          <dd class="col-sm-9" data-field="updated_by"></dd>
                        </dl>
                        <div class="row mb-2 mt-3">
                          <div class="col-sm-3">
                            <label class="form-label fw-bold mb-1" style="font-size:1rem;">Subnet Usage</label>
                          </div>
                          <div class="col-sm-9">
                            <span class="subnet-usage-badge badge" style="font-size:1rem; background-color: #e0e7ef; color: #1a233a; font-weight: 500;"></span>
                          </div>
                        </div>
                        <div class="row mb-2">
                          <div class="col-sm-3">
                            <label class="form-label fw-bold mb-1" style="font-size:1rem;">IP Address List</label>
                          </div>
                          <div class="col-sm-9">
                            <div class="ip-list table-responsive p-0"></div>
                            <div id="ip-list-extra-<%= subnet.id %>" style="display:none;"></div>
                            <div class="d-flex justify-content-center mt-2">
                              <button type="button" class="btn btn-warning btn-sm fw-bold d-flex align-items-center" id="export-ip-btn-<%= subnet.id %>" style="font-size: 1rem; min-width: 90px;">
                                <i class="bi bi-download me-1" style="font-size:1em;"></i> Export
                              </button>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <!-- Subnet Edit Modal -->
                <div class="modal fade" id="subnetEditModal-<%= subnet.id %>" tabindex="-1" aria-labelledby="subnetEditModalLabel-<%= subnet.id %>" aria-hidden="true">
                  <div class="modal-dialog">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="subnetEditModalLabel-<%= subnet.id %>">Edit Subnet</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                      </div>
                      <div class="modal-body">
                        <form class="editSubnetForm" id="editSubnetForm-<%= subnet.id %>" action="/network/subnet-address/<%= subnet.id %>?_method=PUT" method="POST">
                          <div class="mb-3">
                            <label for="editSubnetAddress-<%= subnet.id %>" class="form-label">Subnet Address <span class="text-danger">*</span></label>
                            <input type="text" class="form-control form-control-sm" id="editSubnetAddress-<%= subnet.id %>" name="address" value="<%= subnet.address %>" required>
                          </div>
                          <div class="mb-3">
                            <label for="editSubnetDescription-<%= subnet.id %>" class="form-label">Description</label>
                            <textarea class="form-control" id="editSubnetDescription-<%= subnet.id %>" name="description" rows="4"><%= subnet.description || '' %></textarea>
                          </div>
                          <div class="mb-3">
                            <label for="editSubnetTags-<%= subnet.id %>" class="form-label">Tags</label>
                            <select id="editSubnetTags-<%= subnet.id %>" name="tags[]" class="form-control" multiple data-tags='<%- JSON.stringify(subnet.tags || []) %>' style="min-height:38px;"></select>
                          </div>
                          <div class="modal-footer d-flex justify-content-end px-0">
                            <button type="button" class="btn btn-outline-secondary btn-sm me-2" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary btn-sm">Save Changes</button>
                          </div>
                        </form>
                      </div>
                    </div>
                  </div>
                </div>
                <% if (subnet.children && subnet.children.length > 0) { %>
                  <%= renderSubnetTree(subnet.children, level + 1, counter) %>
                <% } %>
              <% }) %>
            <% } %>
            <tbody>
              <% if (subnetTree && subnetTree.length > 0) { %>
                <% var counter = { value: (page - 1) * pageSize + 1 }; %>
                <%= renderSubnetTree(subnetTree, 0, counter) %>
              <% } else { %>
                <tr><td colspan="5" class="text-center">No data</td></tr>
              <% } %>
            </tbody>
          </table>
        </div>
        <div class="card-footer clearfix">
          <div class="d-flex justify-content-between align-items-center px-3 pb-2" style="padding-top: 1rem;">
            <div>
              <% 
                let startItem = (page - 1) * pageSize + 1;
                let endItem = startItem + (subnetList ? subnetList.length : 0) - 1;
                if (!subnetList || subnetList.length === 0) {
                  startItem = 0;
                  endItem = 0;
                }
              %>
              <span>Showing <%= startItem %> - <%= endItem %> of <%= typeof totalCount !== 'undefined' ? totalCount : 0 %> subnets</span>
            </div>
            <ul class="pagination pagination-sm m-0 float-end">
              <% 
                let startPage = 1;
                let endPage = totalPages;
                if (totalPages > 10) {
                  if (page <= 5) {
                    startPage = 1;
                    endPage = 10;
                  } else if (page + 4 >= totalPages) {
                    startPage = totalPages - 9;
                    endPage = totalPages;
                  } else {
                    startPage = page - 5;
                    endPage = page + 4;
                  }
                }
              %>
              <% 
                // Build filter query string for pagination links
                function buildFilterQuery() {
                  let params = [];
                  if (typeof search !== 'undefined' && search) params.push('search=' + encodeURIComponent(search));
                  if (typeof pageSize !== 'undefined' && pageSize) params.push('pageSize=' + encodeURIComponent(pageSize));
                  if (typeof filterTags !== 'undefined' && filterTags.length) filterTags.forEach(function(tag) { params.push('tags[]=' + encodeURIComponent(tag)); });
                  return params.join('&');
                }
                const filterQuery = buildFilterQuery();
              %>
              <li class="page-item <%= page <= 1 ? 'disabled' : '' %>">
                <a class="page-link" href="?page=<%= page - 1 %><%= filterQuery ? '&' + filterQuery : '' %>" tabindex="-1">Previous</a>
              </li>
              <% if (startPage > 1) { %>
                <li class="page-item"><a class="page-link" href="?page=1<%= filterQuery ? '&' + filterQuery : '' %>">1</a></li>
                <% if (startPage > 2) { %>
                  <li class="page-item disabled"><span class="page-link">...</span></li>
                <% } %>
              <% } %>
              <% for (let i = startPage; i <= endPage; i++) { %>
                <li class="page-item <%= i === page ? 'active' : '' %>"><a class="page-link" href="?page=<%= i %><%= filterQuery ? '&' + filterQuery : '' %>"><%= i %></a></li>
              <% } %>
              <% if (endPage < totalPages) { %>
                <li class="page-item disabled"><span class="page-link">...</span></li>
                <li class="page-item"><a class="page-link" href="?page=<%= totalPages %><%= filterQuery ? '&' + filterQuery : '' %>"><%= totalPages %></a></li>
              <% } %>
              <li class="page-item <%= page >= totalPages ? 'disabled' : '' %>">
                <a class="page-link" href="?page=<%= page + 1 %><%= filterQuery ? '&' + filterQuery : '' %>">Next</a>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
// Handle show subnet detail modal with AJAX
function showSubnetDetail(subnetId) {
  fetch(`/network/api/subnet-address/${subnetId}`)
    .then(res => res.json())
    .then(data => {
      if (data.error) {
        alert(data.error + (data.detail ? (': ' + data.detail) : ''));
        return;
      }
      // Fill modal fields
      document.querySelector(`#subnetDetailModal-${subnetId} .modal-title`).textContent = 'Subnet Information';
      document.querySelector(`#subnetDetailModal-${subnetId} dd[data-field='address']`).textContent = data.address;
      // Hiển thị mô tả subnet có xuống dòng
      const descEl = document.querySelector(`#subnetDetailModal-${subnetId} dd[data-field='description']`);
      if (descEl) {
        descEl.innerHTML = (data.description || '').replace(/\n/g, '<br>');
      }
      // Hiển thị thông tin thời gian và người cập nhật
      const createdEl = document.querySelector(`#subnetDetailModal-${subnetId} dd[data-field='created_at']`);
      if (createdEl) {
        createdEl.textContent = data.created_at ? new Date(data.created_at).toLocaleString('en-GB') : '';
      }
      const updatedEl = document.querySelector(`#subnetDetailModal-${subnetId} dd[data-field='updated_at']`);
      if (updatedEl) {
        updatedEl.textContent = data.updated_at ? new Date(data.updated_at).toLocaleString('en-GB') : '';
      }
      const updatedByEl = document.querySelector(`#subnetDetailModal-${subnetId} dd[data-field='updated_by']`);
      if (updatedByEl) {
        updatedByEl.textContent = data.updated_by || '';
      }
      // Do NOT update tags here, let EJS render them
      // Render IP list as a simple list, show only first 50 IPs, notify user, suggest export for more
      const ipListEl = document.querySelector(`#subnetDetailModal-${subnetId} .ip-list`);
      ipListEl.innerHTML = '';
      const maxDisplay = 200;
      if (data.ipList && data.ipList.length > 0) {
        const showList = data.ipList.slice(0, maxDisplay);
        let html = '<div class="mb-2 text-muted small">Showing the first 200 IPs. For the full list, please use the Export button below.</div>';
        // Arrange IPs in 5 equal columns, not a table, but columns are even
        const colCount = 5;
        const rowCount = Math.ceil(showList.length / colCount);
        html += '<div style="overflow-x:auto; width:100%;"><div class="d-flex flex-wrap gap-0">';
        for (let i = 0; i < showList.length; i++) {
          const ip = showList[i];
          html += `<div style="flex:0 0 auto; display:flex; align-items:center; justify-content:center; min-width:95px; margin-bottom:2px; background:#f8fafc; border-radius:5px; box-shadow:0 1px 2px rgba(0,0,0,0.01); padding:0.22em 0.35em;">
            <a href="/network/ip-address?search=${encodeURIComponent(ip.ip_address)}" target="_blank" class="badge bg-primary text-decoration-none" title="${ip.description ? ip.description.replace(/"/g, '&quot;') : ''}" style="font-size:0.95rem; display:inline-block; min-width:75px; max-width:100%; padding:0.32em 0.7em; white-space:nowrap; text-overflow:ellipsis;">
              ${ip.ip_address}
            </a>
          </div>`;
        }
        html += '</div></div>';
        ipListEl.innerHTML = html;
        // Hide/show extra note
        const extraDiv = document.getElementById(`ip-list-extra-${subnetId}`);
        if (extraDiv) {
          if (data.ipList.length > maxDisplay) {
            extraDiv.style.display = '';
            extraDiv.innerHTML = `<div class='text-muted small mt-1'>...and ${data.ipList.length - maxDisplay} more IPs. Please use Export for the full list.</div>`;
          } else {
            extraDiv.style.display = 'none';
            extraDiv.innerHTML = '';
          }
        }
        // Enable export button
        const exportBtn = document.getElementById(`export-ip-btn-${subnetId}`);
        if (exportBtn) {
          exportBtn.style.display = '';
          exportBtn.onclick = function() {
            exportIpListToExcel(data.ipList, subnetId);
          };
        }
      } else {
        ipListEl.innerHTML = '<div class="text-muted small">No IP addresses in this subnet.</div>';
        const exportBtn = document.getElementById(`export-ip-btn-${subnetId}`);
        if (exportBtn) exportBtn.style.display = 'none';
        const extraDiv = document.getElementById(`ip-list-extra-${subnetId}`);
        if (extraDiv) extraDiv.style.display = 'none';
      }
// Export IP list to Excel
function exportIpListToExcel(ipList, subnetId) {
  // Create CSV content
  let csv = 'IP Address,Description\n';
  ipList.forEach(ip => {
    csv += `"${ip.ip_address}","${ip.description ? ip.description.replace(/"/g, '""') : ''}"\n`;
  });
  // Download as .csv (Excel compatible)
  const blob = new Blob([csv], { type: 'text/csv' });
  const url = URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url;
  a.download = `subnet_${subnetId}_ip_list.csv`;
  document.body.appendChild(a);
  a.click();
  setTimeout(() => {
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  }, 100);
}
      // Update usage badge
      const usageBadge = document.querySelector(`#subnetDetailModal-${subnetId} .subnet-usage-badge`);
      if (usageBadge) {
        if (typeof data.percentUsed !== 'undefined' && data.percentUsed !== null && typeof data.totalIPs !== 'undefined' && data.totalIPs !== null) {
          usageBadge.textContent = `Used: ${(data.ipList ? data.ipList.length : 0)} / ${data.totalIPs} (${data.percentUsed}%)`;
          usageBadge.style.display = '';
        } else {
          usageBadge.style.display = 'none';
        }
      }
    })
    .catch(() => {
      alert('Error loading subnet detail');
    });
}
// Attach event listeners to all show buttons
window.addEventListener('DOMContentLoaded', function() {
  document.querySelectorAll('[data-subnet-detail-btn]').forEach(btn => {
    btn.addEventListener('click', function() {
      const subnetId = this.getAttribute('data-subnet-detail-btn');
      showSubnetDetail(subnetId);
    });
  });
});
</script>
<script>
function showToast(msg, type) {
  const toast = document.createElement('div');
  toast.className = `alert alert-${type}`;
  toast.style.position = 'fixed';
  toast.style.top = '16px';
  toast.style.right = '16px';
  toast.style.zIndex = 9999;
  toast.style.minWidth = '200px';
  toast.innerText = msg;
  document.body.appendChild(toast);
  setTimeout(() => toast.remove(), 3000);
}
</script>
<% if (success) { %>
  <script>
    window.addEventListener('DOMContentLoaded', function() {
      showToast('<%= success %>', 'success');
    });
  </script>
<% } %>
<% if (error) { %>
  <script>
    window.addEventListener('DOMContentLoaded', function() {
      showToast('<%= error %>', 'danger');
    });
  </script>
<% } %>
<script>
  function restoreSelect2Value($el, values, url) {
    if (!values || !values.length) return;
    $.ajax({
      url: url,
      data: { ids: values },
      dataType: 'json',
      traditional: true,
      xhrFields: { withCredentials: true },
      success: function(data) {
        data.forEach(function(item) {
          if ($el.find('option[value="' + item.id + '"]').length === 0) {
            var option = new Option(item.text || item.name, item.id, true, true);
            $el.append(option);
          }
        });
        $el.val(values).trigger('change');
      },
      error: function(xhr, status, error) {
        console.error('Error restoring select2 value:', error);
      }
    });
  }
  $(function() {
    var $filterModal = $('#filterSubnetModal');
    var $modalContent = $filterModal.find('.modal-content');
    var filterValues = {
      tags: JSON.parse(document.getElementById('filter-subnet-data').dataset.tags || '[]')
    };
    $('#filterSubnetTags').select2({
      theme: 'bootstrap-5',
      placeholder: 'Select tag(s)',
      allowClear: true,
      width: '100%',
      dropdownParent: $modalContent,
      ajax: {
        url: '/organize/api/tag',
        dataType: 'json',
        delay: 250,
        data: params => ({ search: params.term }),
        processResults: data => ({ results: data })
      }
    });
    // Restore selected values for multi-select filter fields
    restoreSelect2Value($('#filterSubnetTags'), filterValues.tags, '/organize/api/tag/ids');
    // Clear Filter button: reset tất cả filter về mặc định
    $('#clearFilterBtnSubnet').on('click', function() {
      // Clear all select2 values
      $('#filterSubnetTags').val(null).trigger('change');
      // Close modal
      $filterModal.modal('hide');
      // Redirect to clean URL but preserve pageSize and search
      const currentPageSize = $('select[name="pageSize"]').val() || '10';
      const currentSearch = $('input[name="search"]').val() || '';
      let cleanUrl = '/network/subnet-address';
      const params = [];
      if (currentPageSize && currentPageSize !== '10') params.push('pageSize=' + encodeURIComponent(currentPageSize));
      if (currentSearch) params.push('search=' + encodeURIComponent(currentSearch));
      if (params.length > 0) cleanUrl += '?' + params.join('&');
      window.location.href = cleanUrl;
    });
  });
</script>
<script>
window.addEventListener('DOMContentLoaded', function() {
  // Init select2 for Add Subnet modal tags
  var $addSubnetTags = $('#addSubnetTags');
  if ($.fn.select2 && $addSubnetTags.length && !$addSubnetTags.hasClass('select2-hidden-accessible')) {
    $addSubnetTags.select2({
      theme: 'bootstrap-5',
      placeholder: 'Select tag(s)',
      allowClear: true,
      width: '100%',
      ajax: {
        url: '/organize/api/tag',
        dataType: 'json',
        delay: 250,
        data: function(params) { return { search: params.term }; },
        processResults: function(data) { return { results: data }; },
        cache: true
      }
    });
  }

  // Init select2 for all Edit Subnet modals and preselect current tags, but always clear options first to avoid duplicates
  document.querySelectorAll('select[id^="editSubnetTags-"]').forEach(function(sel) {
    var $editTags = $(sel);
    if ($.fn.select2 && $editTags.length && !$editTags.hasClass('select2-hidden-accessible')) {
      $editTags.select2({
        theme: 'bootstrap-5',
        placeholder: 'Select tag(s)',
        allowClear: true,
        width: '100%',
        ajax: {
          url: '/organize/api/tag',
          dataType: 'json',
          delay: 250,
          data: function(params) { return { search: params.term }; },
          processResults: function(data) { return { results: data }; },
          cache: true
        }
      });
    }
    // Always clear and re-append only the current tags to avoid duplicates
    $editTags.find('option').remove();
    var tagData = $editTags.data('tags');
    if (Array.isArray(tagData)) {
      tagData.forEach(function(tag) {
        var option = new Option(tag.name, tag.id, true, true);
        $editTags.append(option);
      });
      $editTags.trigger('change');
    }
  });
});
</script>
<style>
  /* Remove all background, border, and badge for IP links in subnet detail modal */
  .ip-link-no-bg {
    background: none !important;
    border: none !important;
    box-shadow: none !important;
    color: inherit !important;
    padding: 0 !important;
    margin: 0 !important;
    border-radius: 0 !important;
    display: inline;
    text-decoration: underline;
    font-weight: normal;
    font-size: inherit;
    text-transform: lowercase;
  }
  /* Ensure select2 dropdown is above Bootstrap modal */
  .select2-container--open {
    z-index: 2055 !important;
  }
  .select2-dropdown {
    z-index: 2055 !important;
  }
</style>

<script src="/vendor/jquery-3.6.0.min.js"></script>
<link href="/vendor/select2.min.css" rel="stylesheet" />
<link href="/css/select2-bootstrap-5-theme.min.css" rel="stylesheet" />
<script src="/vendor/select2.min.js"></script>
<script src="/vendor/bootstrap.min.js"></script>
<link rel="stylesheet" href="/vendor/fontawesome/css/all.min.css" />
